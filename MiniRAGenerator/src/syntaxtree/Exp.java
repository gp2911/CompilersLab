//
// Generated by JTB 1.3.2
//

package syntaxtree;

import myClasses.Register;

import java.util.ArrayList;
import java.util.HashSet;

/**
 * Grammar production:
 * f0 -> Call()
 *       | HAllocate()
 *       | BinOp()
 *       | SimpleExp()
 */
public class Exp implements Node {
   public NodeChoice f0;
    public String info;
    public HashSet<Temp> tempsUsed;
    boolean isStack;
    public String spillCode;
    Register expReg;


   public Exp(NodeChoice n0) {
      f0 = n0;
       info = null;
       tempsUsed = new HashSet<Temp>();
       isStack = false;
       expReg = null;
       spillCode = null;
   }
   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

