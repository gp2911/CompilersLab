//
// Generated by JTB 1.3.2
//

package syntaxtree;
import myClasses.Register;

import java.util.*;

/**
 * Grammar production:
 * f0 -> Temp()
 *       | IntegerLiteral()
 *       | Label()
 */
public class SimpleExp implements Node {
   public NodeChoice f0;
    public String SimplexType;
    public Temp info;
    public Stack<Register> regs;
    public boolean inStack;
    public String spillCode;

   public SimpleExp(NodeChoice n0) {
      f0 = n0;
       SimplexType = "";
       info = null;
       regs = new Stack<Register>();
       spillCode = null;
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

